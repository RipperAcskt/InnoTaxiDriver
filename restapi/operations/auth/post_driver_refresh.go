// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PostDriverRefreshHandlerFunc turns a function with the right signature into a post driver refresh handler
type PostDriverRefreshHandlerFunc func(PostDriverRefreshParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostDriverRefreshHandlerFunc) Handle(params PostDriverRefreshParams) middleware.Responder {
	return fn(params)
}

// PostDriverRefreshHandler interface for that can handle valid post driver refresh params
type PostDriverRefreshHandler interface {
	Handle(PostDriverRefreshParams) middleware.Responder
}

// NewPostDriverRefresh creates a new http.Handler for the post driver refresh operation
func NewPostDriverRefresh(ctx *middleware.Context, handler PostDriverRefreshHandler) *PostDriverRefresh {
	return &PostDriverRefresh{Context: ctx, Handler: handler}
}

/*
	PostDriverRefresh swagger:route POST /driver/refresh auth postDriverRefresh

PostDriverRefresh post driver refresh API
*/
type PostDriverRefresh struct {
	Context *middleware.Context
	Handler PostDriverRefreshHandler
}

func (o *PostDriverRefresh) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostDriverRefreshParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostDriverRefreshBody post driver refresh body
//
// swagger:model PostDriverRefreshBody
type PostDriverRefreshBody struct {

	// refresh token
	RefreshToken string `json:"refresh_token,omitempty"`
}

// Validate validates this post driver refresh body
func (o *PostDriverRefreshBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post driver refresh body based on context it is used
func (o *PostDriverRefreshBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDriverRefreshBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDriverRefreshBody) UnmarshalBinary(b []byte) error {
	var res PostDriverRefreshBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostDriverRefreshForbiddenBody post driver refresh forbidden body
//
// swagger:model PostDriverRefreshForbiddenBody
type PostDriverRefreshForbiddenBody struct {

	// error
	Error string `json:"error,omitempty"`
}

// Validate validates this post driver refresh forbidden body
func (o *PostDriverRefreshForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post driver refresh forbidden body based on context it is used
func (o *PostDriverRefreshForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDriverRefreshForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDriverRefreshForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostDriverRefreshForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostDriverRefreshInternalServerErrorBody post driver refresh internal server error body
//
// swagger:model PostDriverRefreshInternalServerErrorBody
type PostDriverRefreshInternalServerErrorBody struct {

	// error
	Error string `json:"error,omitempty"`
}

// Validate validates this post driver refresh internal server error body
func (o *PostDriverRefreshInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post driver refresh internal server error body based on context it is used
func (o *PostDriverRefreshInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDriverRefreshInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDriverRefreshInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res PostDriverRefreshInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostDriverRefreshOKBody post driver refresh o k body
//
// swagger:model PostDriverRefreshOKBody
type PostDriverRefreshOKBody struct {

	// access token
	AccessToken string `json:"access_token,omitempty"`

	// refresh token
	RefreshToken string `json:"refresh_token,omitempty"`
}

// Validate validates this post driver refresh o k body
func (o *PostDriverRefreshOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post driver refresh o k body based on context it is used
func (o *PostDriverRefreshOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDriverRefreshOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDriverRefreshOKBody) UnmarshalBinary(b []byte) error {
	var res PostDriverRefreshOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// PostDriverRefreshUnauthorizedBody post driver refresh unauthorized body
//
// swagger:model PostDriverRefreshUnauthorizedBody
type PostDriverRefreshUnauthorizedBody struct {

	// error
	Error string `json:"error,omitempty"`
}

// Validate validates this post driver refresh unauthorized body
func (o *PostDriverRefreshUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post driver refresh unauthorized body based on context it is used
func (o *PostDriverRefreshUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostDriverRefreshUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostDriverRefreshUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res PostDriverRefreshUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
