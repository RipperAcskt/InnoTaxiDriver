// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DeleteDriverHandlerFunc turns a function with the right signature into a delete driver handler
type DeleteDriverHandlerFunc func(DeleteDriverParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteDriverHandlerFunc) Handle(params DeleteDriverParams) middleware.Responder {
	return fn(params)
}

// DeleteDriverHandler interface for that can handle valid delete driver params
type DeleteDriverHandler interface {
	Handle(DeleteDriverParams) middleware.Responder
}

// NewDeleteDriver creates a new http.Handler for the delete driver operation
func NewDeleteDriver(ctx *middleware.Context, handler DeleteDriverHandler) *DeleteDriver {
	return &DeleteDriver{Context: ctx, Handler: handler}
}

/*
	DeleteDriver swagger:route DELETE /driver auth deleteDriver

DeleteDriver delete driver API
*/
type DeleteDriver struct {
	Context *middleware.Context
	Handler DeleteDriverHandler
}

func (o *DeleteDriver) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteDriverParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// DeleteDriverBadRequestBody delete driver bad request body
//
// swagger:model DeleteDriverBadRequestBody
type DeleteDriverBadRequestBody struct {

	// error
	Error string `json:"error,omitempty"`
}

// Validate validates this delete driver bad request body
func (o *DeleteDriverBadRequestBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete driver bad request body based on context it is used
func (o *DeleteDriverBadRequestBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDriverBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDriverBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteDriverBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteDriverForbiddenBody delete driver forbidden body
//
// swagger:model DeleteDriverForbiddenBody
type DeleteDriverForbiddenBody struct {

	// error
	Error string `json:"error,omitempty"`
}

// Validate validates this delete driver forbidden body
func (o *DeleteDriverForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete driver forbidden body based on context it is used
func (o *DeleteDriverForbiddenBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDriverForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDriverForbiddenBody) UnmarshalBinary(b []byte) error {
	var res DeleteDriverForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteDriverInternalServerErrorBody delete driver internal server error body
//
// swagger:model DeleteDriverInternalServerErrorBody
type DeleteDriverInternalServerErrorBody struct {

	// error
	Error string `json:"error,omitempty"`
}

// Validate validates this delete driver internal server error body
func (o *DeleteDriverInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete driver internal server error body based on context it is used
func (o *DeleteDriverInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDriverInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDriverInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res DeleteDriverInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// DeleteDriverUnauthorizedBody delete driver unauthorized body
//
// swagger:model DeleteDriverUnauthorizedBody
type DeleteDriverUnauthorizedBody struct {

	// error
	Error string `json:"error,omitempty"`
}

// Validate validates this delete driver unauthorized body
func (o *DeleteDriverUnauthorizedBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete driver unauthorized body based on context it is used
func (o *DeleteDriverUnauthorizedBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteDriverUnauthorizedBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteDriverUnauthorizedBody) UnmarshalBinary(b []byte) error {
	var res DeleteDriverUnauthorizedBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
