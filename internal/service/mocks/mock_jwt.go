// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/RipperAcskt/innotaxidriver/internal/service (interfaces: UserSerivce)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	user "github.com/RipperAcskt/innotaxidriver/internal/client"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockUserSerivce is a mock of UserSerivce interface.
type MockUserSerivce struct {
	ctrl     *gomock.Controller
	recorder *MockUserSerivceMockRecorder
}

// MockUserSerivceMockRecorder is the mock recorder for MockUserSerivce.
type MockUserSerivceMockRecorder struct {
	mock *MockUserSerivce
}

// NewMockUserSerivce creates a new mock instance.
func NewMockUserSerivce(ctrl *gomock.Controller) *MockUserSerivce {
	mock := &MockUserSerivce{ctrl: ctrl}
	mock.recorder = &MockUserSerivceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserSerivce) EXPECT() *MockUserSerivceMockRecorder {
	return m.recorder
}

// GetJWT mocks base method.
func (m *MockUserSerivce) GetJWT(arg0 context.Context, arg1 uuid.UUID) (*user.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJWT", arg0, arg1)
	ret0, _ := ret[0].(*user.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJWT indicates an expected call of GetJWT.
func (mr *MockUserSerivceMockRecorder) GetJWT(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJWT", reflect.TypeOf((*MockUserSerivce)(nil).GetJWT), arg0, arg1)
}
